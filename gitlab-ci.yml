include: VersionInfo.yml

stages:
  - build
  - pack
  - deploy

variables:
  REVISION_NUMBER: ${RELEASE_NUMBER}_${CI_COMMIT_SHORT_SHA}
  EXPORT_NAME_RELEASE: ${GAME_NAME}_${RELEASE_NUMBER}
  EXPORT_NAME_INTERNAL: ${GAME_NAME}_${RELEASE_NUMBER}_${CI_COMMIT_SHORT_SHA}
  GIT_SUBMODULE_STRATEGY: recursive

# ================================================================================================================
#                                                   Job Dependencies
# ================================================================================================================
# =+=+=+=+=+=+=+= BUILD COMMON =+=+=+=+=+=+=+=
.build-internal: &build-internal
  image: sdggames/godot-ci:$GODOT_VERSION
  script:
    - mkdir -v -p build/$BUILD_FOLDER
    - mkdir -v -p .godot/editor
    - mkdir -v -p .godot/imported
    - echo godot -v --headless $EXPORT_MODE "$BUILD_TARGET" build/$BUILD_FOLDER/$EXPORT_NAME_INTERNAL$BUILD_FILE_EXTENSION
    - godot -v --headless $EXPORT_MODE "$BUILD_TARGET" build/$BUILD_FOLDER/$EXPORT_NAME_INTERNAL$BUILD_FILE_EXTENSION
  artifacts:
    name: $EXPORT_NAME_INTERNAL
    paths:
      - build/
    expire_in: 6 hour # We have a consolidated copy created in the final stage, just keep this while the pipeline might be running.

.build-release: &build-release
  image: sdggames/godot-ci:$GODOT_VERSION
  script:
    - mkdir -v -p build/$BUILD_FOLDER
    - mkdir -v -p .godot/editor
    - mkdir -v -p .godot/imported
    - echo godot -v --headless $EXPORT_MODE "$BUILD_TARGET" build/$BUILD_FOLDER/$EXPORT_NAME_RELEASE$BUILD_FILE_EXTENSION
    - godot -v --headless $EXPORT_MODE "$BUILD_TARGET" build/$BUILD_FOLDER/$EXPORT_NAME_RELEASE$BUILD_FILE_EXTENSION
  artifacts:
    name: $EXPORT_NAME_RELEASE
    paths:
      - build/
    expire_in: 6 hour # We have a consolidated copy created in the final stage, just keep this while the pipeline might be running.

.build-web: &build-web
  image: sdggames/godot-ci:$GODOT_VERSION
  script:
    - mkdir -v -p build/$BUILD_FOLDER
    - mkdir -v -p .godot/editor
    - mkdir -v -p .godot/imported
    - echo godot -v --headless $EXPORT_MODE  "$BUILD_TARGET" build/$BUILD_FOLDER/index.html
    - godot -v --headless $EXPORT_MODE  "$BUILD_TARGET" build/$BUILD_FOLDER/index.html
  artifacts:
    name: $EXPORT_NAME_RELEASE
    paths:
      - build/
    expire_in: 6 hour # We have a consolidated copy created in the final stage, just keep this while the pipeline might be running.

# ================================================================================================================
#                                                           Jobs
# ================================================================================================================
# =+=+=+=+=+=+=+= BUILD JOBS - DEBUG =+=+=+=+=+=+=+=
build_internal:windows-debug:
  stage: build
  variables:
    BUILD_FILE_EXTENSION: .exe
    BUILD_TARGET: "Windows"
    BUILD_FOLDER: "windows-debug"
    EXPORT_MODE: "--export-debug"
  <<: *build-internal
  except:
    - main

build_internal:mac-debug:
  stage: build
  variables:
    BUILD_FILE_EXTENSION: .zip
    BUILD_TARGET: "macOS"
    BUILD_FOLDER: "mac-debug"
    EXPORT_MODE: "--export-debug"
  <<: *build-internal
  except:
    - main

build_internal:linux-debug:
  stage: build
  variables:
    BUILD_FILE_EXTENSION: .x86_64
    BUILD_TARGET: "Linux"
    BUILD_FOLDER: "linux-debug"
    EXPORT_MODE: "--export-debug"
  <<: *build-internal
  except:
    - main

build_internal:web-debug:
  stage: build
  variables:
    BUILD_FILE_EXTENSION: index.html
    BUILD_TARGET: "Web"
    BUILD_FOLDER: "web-debug"
    EXPORT_MODE: "--export-debug"
  <<: *build-web
  except:
    - main

# =+=+=+=+=+=+=+= BUILD JOBS - RELEASE =+=+=+=+=+=+=+=
build_release:windows-release:
  stage: build
  variables:
    BUILD_FILE_EXTENSION: .exe
    BUILD_TARGET: "Windows"
    BUILD_FOLDER: "windows-release"
    EXPORT_MODE: "--export-release"
  <<: *build-release

build_release:mac-release:
  stage: build
  variables:
    BUILD_FILE_EXTENSION: .zip
    BUILD_TARGET: "macOS"
    BUILD_FOLDER: "mac-release"
    EXPORT_MODE: "--export-release"
  <<: *build-release

build_release:linux-release:
  stage: build
  variables:
    BUILD_FILE_EXTENSION: .x86_64
    BUILD_TARGET: "Linux"
    BUILD_FOLDER: "linux-release"
    EXPORT_MODE: "--export-release"
  <<: *build-release

build_release:web-release:
  stage: build
  variables:
    BUILD_FILE_EXTENSION: index.html
    BUILD_TARGET: "Web"
    BUILD_FOLDER: "web-release"
    EXPORT_MODE: "--export-release"
  <<: *build-web

# =+=+=+=+=+=+=+= PACK JOBS =+=+=+=+=+=+=+=
# Contain all of the builds in a single artifact so we don't have to download all the things!
consolidateArtifacts:
  image: alpine:latest
  stage: pack
  script: "ls ./build"
  artifacts:
    name: $GAME_NAME_$REVISION_NUMBER
    expose_as: "Build Output"
    paths:
      - ./build/
    expire_in: 1 day # This is huge, we probably want to save it to a repo somewhere so we don't run out of space.

# =+=+=+=+=+=+=+= DEPLOY JOBS =+=+=+=+=+=+=+=
itchio-deploy:
  image: sdggames/godot-ci:$GODOT_VERSION
  stage: deploy
  script:
    - butler push ./build/linux-release $GROUP_NAME/$GAME_NAME:linux
    - butler push ./build/windows-release $GROUP_NAME/$GAME_NAME:windows
    - butler push ./build/mac-release $GROUP_NAME/$GAME_NAME:mac
    - butler push ./build/web-release $GROUP_NAME/$GAME_NAME:web
  needs:
    - build_release:linux-release
    - build_release:windows-release
    - build_release:mac-release
    - build_release:web-release
  only:
    - main
  when: manual
