name: "godot-ci export"
on: push

env:
  GODOT_VERSION: "4.0"
  EXPORT_NAME: ultimate-myanmar-typing-wizard
  PROJECT_PATH: ./
  
jobs:
  export-windows:
    name: Windows Export
    runs-on: ubuntu-20.04
    container:
      image: 09799474633/mm-typing-game-godot
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
          cp -rvf /templates/${GODOT_VERSION}.stable/* ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable/
          git clone https://github.com/stmSi/Ultimate-Myanmar-Typing-Wizard.git
      - name: Windows Build
        run: |
          cd Ultimate-Myanmar-Typing-Wizard
          mkdir -v -p build/windows
          cp -rvf Texts build/windows/
          godot --headless --export-debug "Windows Desktop"

      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: ultimate-myanmar-typing-wizard_windows_debug_x64_64
          path: Ultimate-Myanmar-Typing-Wizard/build/windows

  export-linux:
    name: Linux Export
    runs-on: ubuntu-20.04
    container:
      image: 09799474633/mm-typing-game-godot
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
          cp -rvf /templates/${GODOT_VERSION}.stable/* ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable/
          git clone https://github.com/stmSi/Ultimate-Myanmar-Typing-Wizard.git
      - name: Linux Build
        run: |
          cd Ultimate-Myanmar-Typing-Wizard
          mkdir -v -p build/linux
          cp -rvf Texts build/linux/
          godot --headless --export-debug "Linux/X11"

      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: ultimate-myanmar-typing-wizard_linux_debug_x86_x64
          path: Ultimate-Myanmar-Typing-Wizard/build/linux

  # export-web:
  #   name: Web Export
  #   runs-on: ubuntu-20.04
  #   container:
  #     image: barichello/godot-ci:3.3.4
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #       with:
  #         lfs: true
  #     - name: Setup
  #       run: |
  #         mkdir -v -p ~/.local/share/godot/templates
  #         mv /templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
  #     - name: Web Build
  #       run: |
  #         mkdir -v -p build/web
  #         cd $PROJECT_PATH
  #         godot -v --export "HTML5" ../build/web/index.html
  #     - name: Upload Artifact
  #       uses: actions/upload-artifact@v1
  #       with:
  #         name: web
  #         path: build/web
  #     - name: Install rsync ðŸ“š
  #       run: |
  #         apt-get update && apt-get install -y rsync
  #     - name: Deploy to GitHub Pages ðŸš€
  #       uses: JamesIves/github-pages-deploy-action@releases/v4
  #       with:
  #         branch: gh-pages # The branch the action should deploy to.
  #         folder: build/web # The folder the action should deploy.

  # export-mac:
  #   name: Mac Export
  #   runs-on: ubuntu-20.04
  #   container:
  #     image: barichello/godot-ci:3.3.4
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #       with:
  #         lfs: true
  #     - name: Setup
  #       run: |
  #         mkdir -v -p ~/.local/share/godot/templates
  #         mv /templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
  #     - name: Mac Build
  #       run: |
  #         mkdir -v -p build/mac
  #         cd $PROJECT_PATH
  #         godot -v --export "Mac OSX" ../build/mac/$EXPORT_NAME.zip
  #     - name: Upload Artifact
  #       uses: actions/upload-artifact@v1
  #       with:
  #         name: mac
  #         path: build/mac
